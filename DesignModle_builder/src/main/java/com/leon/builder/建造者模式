 建造者模式（Builder），将一个复杂的对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示


 1.何时使用
   一个基本部件都不会变，而其组合经常变化的时候

 2.优点
   封装性，是客户端不必知道产品内部组成的细节。
   建造者独立，易扩展
   便于控制细节风险，可以对建造过程逐步细化，而不对其他模块产生任何影响

 3.缺点
   产品必须有共同点，范围有限制。
   如果内部变化复杂，会有很多建造类。
 4.使用场景
   相同的方法，不同的执行顺序，产生不同的事件结果时。
   需要生成的对象具有复杂的内部结果时。
   多个部件或零件，都可以装配到一个对象中，但产生的结果又不相同时

 5.与工程模式的区别
   更关注于零件装配的顺序


